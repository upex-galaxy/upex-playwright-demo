name: 🧪Ely's Pipeline SanityTest Execution
run-name: ${{github.actor}}👨🏻‍🔬 triggered SanityTest in ${{github.ref_name}}
on:
  push:
    branches: ['test/GX3-4236/dropdown_select_menu'] #! Cambia "TuBranchAqui" por el nombre de tu rama de tarea.


jobs:
  TestSuite:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: 📘 Checkout Repo
      uses: actions/checkout@v4

    - name: 💿 Installing Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: 🍙 Bun Setup
      uses: oven-sh/setup-bun@v1

    - name: 🧬 Install Project Dependencies
      run: bun install

    - name: 🎭️ Installing Playwright And Browsers
      run: bun run pw:install

    - name: ✅ 🧪Test Suite Execution
      run: | #todo: EDITAR AQUÍ EL ARCHIVO SUITE A EJECUTAR:
        bun run test:ci tests/specs/widgets/GX3-4236-Dropdown-Select.test.ts

    #* ------------------------------------
    - name: 📊 Get Allure Report History
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages #? the branch used for the GitHub Pages content.
        path: gh-pages #? this is the directory where the previous allure reports were stored. 
        #? In this case, the path gh-pages means the root of the repository.

    - name: 📊 Build Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        gh_pages: gh-pages/sanity #? the directory of checkout branch (gh-pages) where the previous allure data will be copied.
        #? this copied data will be combined with the actual allure-report data and generate the allure-history data.
        subfolder: sanity #? the subfolder where the deployed data (allure-history) will be placed. 
        #? If destination_dir is not specified, this subfolder will be saved to the root of the branch. 
        #? Note About the subfolder: Use this if you want to split the reports as diferent types (i.g sanity, regression, smoke, etc) 
        allure_results: allure-results #? path of the actual allure-results generated by the tests.
        allure_report: allure-report #? path of the allure-report generated by the tests to be combined with the previous data.
        allure_history: allure-history #? path of the allure-history to be generated by the action.
        keep_reports: 10

    - name: 📡 Upload Artifact - Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sanity-allure-report
        path: allure-history
        retention-days: 15

    - name: 🚀 Deploy Allure Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages #? the branch used for the GitHub Pages content.
        # destination_dir: sanity #? this is the directory inside the gh-pages branch where the allure-history will be saved.
        #? Note: If you use a destination_dir i.g 'staging' AND provide a subfolder i.g 'sanity' in the Build Allure Report step,
        #? the allure-history will be published on the 'staging/sanity' directory.
        publish_dir: allure-history #? the directory to be published. Must be the same as the allure_history value from the Build Allure Report step
        keep_files: true
    #* ------------------------------------

    - name: ✅Import Test Results to Xray
      if: always()
      uses: mikepenz/xray-action@v3
      with:
        username: ${{secrets.XRAY_CLIENT_ID}}
        password: ${{secrets.XRAY_CLIENT_SECRET}}
        testFormat: 'junit'
        testPaths: 'test-junit-report/main-importer-report.xml'
        testExecKey: 'GX3-4243' #!Cambiar a tu TX correspondiente.
        projectKey: 'GX3' #!Cambiar a tu Proyecto Level correspondiente.
      env:
        XRAY_CLIENT: ${{ secrets.XRAY_CLIENT_SECRET }}
        XRAY_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}

    - name: 🔔Slack Notification of Done
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Ari✨
        SLACK_MESSAGE: ':test_tube: Playwright: Test Execution is Done and updated in Jira :rocket:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://image.cdn2.seaart.ai/2023-12-06/clo9g0h4msbc73ac2sog/99e1abc36f32945cd4bacf5ee7448e96194545f7_high.webp
